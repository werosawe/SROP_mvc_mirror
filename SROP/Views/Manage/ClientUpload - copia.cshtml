@model FileUpLoad
@{
    ViewBag.Title = "Cargar archivos";
   @*Layout = "~/Views/Shared/_Layout.cshtml";*@
}
<style>
    table tr{ height: 15px !important; }
    table tr td{ height: 15px !important; }
    .upload-progress-bar { width: 31%; }
    .status-icon { width: 5%; }
    .total-progress { text-align: right; font-weight: bold; background-color: chartreuse; margin: 1px; height: 30px }
</style>
<span id="pMensajeUpload"></span>
<script>
        var totalProgress = 0.0;
        var totalSize = 0.0;
        var filesToUpload = [];
        var output = [];
        $(document).ready(function () {
            //filesToUploadCtrl
            $("#filesToUploadCtrl").change(function () {
                $("#btnClear").trigger("click");
                $("#btnUpload").show();
                $("#btnClear").show();
                $("#divPropiedaArchivo").show();
                $("#divProgresoArchivo").show();
                filesToUpload = [];
                output = [];
                totalProgress = 0;
                totalSize = 0;
                var input = document.getElementById('filesToUploadCtrl');

                var fileIdCounter = 0;
                for (var x = 0; x < input.files.length; x++) {
                    fileIdCounter++;
                    totalSize += input.files[x].size;
                    var file = input.files[x];
                    var fileId = input.files[x].name;
                    filesToUpload.push({
                        id: fileId,
                        file: file
                    });
                    var html =
                        '<tr class="border-bottom-success" >' +
                        '<td>' + input.files[x].name + '</td>' +
                        '<td style="width:18%">' + humanFileSize(input.files[x].size, false) + '</td>' +
                        '<td class="upload-progress-bar"><div class="file-progress" id=' + input.files[x].name + ' data-total-parts="0" data-id="' + input.files[x].name +
                        '" data-current-part="0" style="background-color: chartreuse;margin: 2px;  width: 0%;height: 30px"></div></td>' +
                        '<td class="status-icon" data-id="' + input.files[x].name + '" ><a title="Eliminar archivo" class="btn btn-danger removeFile" href="#" data-fileid="' + input.files[x].name +
                        '"><i class="icon-trash4"></i></a></td>' +
                        '</tr>';
                    output.push(html);
                }
                $("#files-count").html(fileIdCounter);
                $("#progressTable").append(output.join(""));
            });

            $('#btnUpload').click(function (e) {
                e.preventDefault();
                $("#total-progress").css("padding", "2px 4px");
                var accept = '__123456';
                var upload = toJson($('#divUpload').data('upload'));
                if (upload.IsJson == true) {
                    if (upload.Json.accept != null) { accept = upload.Json.accept.toUpperCase(); }
                }
                for (var x = 0; x < filesToUpload.length; x++) {
                    //UploadFile(filesToUpload[x].file);
                    var ext = getExtencion(filesToUpload[x].file.name).toUpperCase();
                    if (accept.indexOf(ext) !== -1) {
                        UploadFile(filesToUpload[x].file);
                    } else {
                        msgAdvertencia('Formato del archivo adjunto No valido', 'pMensajeUpload');
                    }
                }
                $("#btnUpload").hide();
                $("#btnClear").hide();
            }
            );


            function getExtencion(filename) {
                var a = filename.split('.');
                if (a.length === 1 || (a[0] === "" && a.length === 2)) {
                    return "";
                }
                return a.pop();
            }

            $(this).on("click", ".removeFile",
                function (e) {
                    e.preventDefault();
                    var fileId = $(this).data("fileid");
                    for (var i = 0; i < filesToUpload.length; ++i) {
                        if (filesToUpload[i].id === fileId)
                            filesToUpload.splice(i, 1);
                    }
                    $(this).parent().parent().remove();
                });
            $(this).on("click", "#btnClear",
                function (e) {
                    e.preventDefault();
                    filesToUpload = [];
                    $("#filesToUploadCtrl").empty();
                    $("#progressTable").empty();
                    $("#files-count").html("0");
                    $("#uploaded-size").html("");
                    $("#total-progress").css("width", 0 + "%");
                    $("#total-progress").css("padding", "0px");
                    $("#total-progress").html("");
                    totalProgress = 0;
                    totalSize = 0;
                    $("#btnUpload").hide();
                    $("#btnClear").hide();
                    $("#divPropiedaArchivo").hide();
                    $("#divProgresoArchivo").hide();
                });
        });

        //var g = 1;
        function UploadFileChunk(Chunk, FilePartName, fileName) {
            var FD = new FormData();
            FD.append('file', Chunk, FilePartName);
            var dataUpload = JSON.stringify($('#divUpload').data('upload'));
            FD.append('JSONSTRING', dataUpload);
            FD.append('TIPOARCHIVODOCUMENTO', '@Model.TIPOARCHIVODOCUMENTO');
            FD.append('ENVIARA', '@Model.ENVIARA');
            //url: '@Url.Action("GetsDistrito", "api/UbigeoApi", new { area=  DBNull.Value })',
            //var url = '@Url.Action("UploadFile", "api/ManageApi", new { area =  DBNull.Value } )';


            //$.ajax({
            //    url: uri,
            //    dataType: "json",
            //    type: 'POST',
            //    cache: false,
            //    data: PERSONA,
            //    success: function (data) {
            //        $("#ID_PERSONA").val(data.ID_PERSONA);
            //        $("#ID_EST_PAG").val(data.ID_EST_PAG);
            //        pCargarPersonar(-1);
            //        mExito("Se grabó el registro")
            //    }
            //});

            $.ajax({
                url: '@Url.Action("UploadFile", "api/ManageApi", new { area =  DBNull.Value } )',
                type: "POST",
                //dataType: "json",
                //contentType: "application/json;chartset=utf-8",
                contentType: false,
                processData: false,
                cache: false,
                data: FD,
                success: function (r) {
                    if (r.success == true) {
                        MostrarMensaje(r.Message);
                    }
                }
            }).done(function (result) {

                var stringLingth = FilePartName.length;
                //g = g + 1;
                var indexOflastPart = FilePartName.lastIndexOf(".part_");
                var lastPart = FilePartName.substr(indexOflastPart, stringLingth - indexOflastPart);
                var parts = lastPart.split('_');
                var chuncksCount = parts[1].split('.');
                var chunkNumber = chuncksCount[0];
                var chunksTotal = chuncksCount[1];
                totalProgress = totalProgress + Chunk.size;
                $("#uploaded-size").html(humanFileSize(totalProgress, false));
                //console.log("Total Progress : "+totalProgress);
                var totalProgressRatio = ((totalProgress / totalSize) * 100);
                $("#total-progress").css("width", totalProgressRatio + "%");
                $("#total-progress").html(totalProgressRatio.toFixed(2) + "%");

                $(".file-progress").each(function () {
                    var elemnt = $(this);
                    var name = elemnt.data("id");
                    if (name == fileName) {

                        var currentProgress = elemnt.data("current-part");
                        var actualProgress = currentProgress + 1;
                        elemnt.data("current-part", actualProgress);
                        var currentProgressBar = ((actualProgress / chunksTotal) * 100);
                        elemnt.css("width", currentProgressBar + "%");

                        if (currentProgressBar == 100) {
                            elemnt.parent().next().html('<i class="icon-check text-success"></i>');
                        }
                    }
                });

                $(".status-icon").each(function () {
                    var elemnt = $(this);
                    var name = elemnt.data("id");
                    if (name == fileName) {

                    }
                });

                if (totalProgressRatio == 100) {
                    filesToUpload = [];
                    totalProgress = 0;
                    totalSize = 0;
                    output = [];

                    window['@Model.TerminateFunction']('pepe');

                    //window['CargarSimbolo']('pepe');
                    //window[pr.funcion](criterioOrden + txtpagina);
                    $('#btnSalir').click();

                }

            });
        }

        function UploadFile(TargetFile) {
            // create array to store the buffer chunks
            var FileChunk = [];
            // the file object itself that we will work with
            // var file = TargetFile[0];
            var file = TargetFile;
            // set up other initial vars
            //var MaxFileSizeMB = .5;
            var MaxFileSizeMB = .05;
            var BufferChunkSize = MaxFileSizeMB * (1024 * 1024);
            var ReadBuffer_Size = 1024;
            var FileStreamPos = 0;
            // set the initial chunk length
            var EndPos = BufferChunkSize;
            var Size = file.size;

            // add to the FileChunk array until we get to the end of the file
            while (FileStreamPos < Size) {
                // "slice" the file from the starting position/offset, to  the required length
                FileChunk.push(file.slice(FileStreamPos, EndPos));
                FileStreamPos = EndPos; // jump by the amount read
                EndPos = FileStreamPos + BufferChunkSize; // set next chunk length
            }
            // get total number of "files" we will be sending
            var TotalParts = FileChunk.length;
            var PartCount = 0;
            var Progress = 0;
            // loop through, pulling the first item from the array each time and sending it
            while (chunk = FileChunk.shift()) {
                PartCount++;

                // file name convention
                var FilePartName = file.name + ".part_" + PartCount + "." + TotalParts;
                // send the file
                UploadFileChunk(chunk, FilePartName, file.name);
            }
        }

        function humanFileSize(bytes, si) {
            var thresh = si ? 1000 : 1024;
            if (Math.abs(bytes) < thresh) {
                return bytes + ' B';
            }
            var units = si
                ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
                : ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            var u = -1;
            do { 8
                bytes /= thresh;
                ++u;
            } while (Math.abs(bytes) >= thresh && u < units.length - 1);
            return bytes.toFixed(1) + ' ' + units[u];
        }

</script>
<div id='divUpload' data-upload='@Model.JSONSTRING' >
    <div class="col-lg-12">
        <label class="btn btn-success fileinput-button mr-1">
            <i class="icon-plus4"></i>
            <span>Archivos</span>
            @Model.inputFile()
        </label>
        <button type="button" id="btnUpload" style="display:none;" class="btn btn-primary start mr-1">
            <i class="icon-cloud-upload3"></i>
            <span>Transferir</span>
        </button>
        <button type="button" id="btnClear" style="display:none;" class="btn btn-danger delete mr-1">
            <i class="icon-trash4"></i>
            <span>Limpiar</span>
        </button>
        <button type="reset" id="btnSalir" class="btn btn-warning cancel mr-1" data-dismiss="modal">
            <i class="icon-ban2"></i>
            <span>Salir</span>
        </button>
    </div>
    <div class="row ">
        <div class="col-md-12">
            <table id="progressTable" class="table table-bordered mb-0">
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div class="form-group row" id="divPropiedaArchivo" style="display:none;">
        <div class="col-md-6">
            <label class="col-md-6 label-control" for="files-count">N° de archivos</label>
            <div class="col-md-6">
                <p id="files-count" class="form-control-static"></p>
            </div>
        </div>
        <div class="col-md-6">
            <label class="col-md-6 label-control" for="uploaded-size">Peso total</label>
            <div class="col-md-6">
                <p id="uploaded-size" class="form-control-static pull-right"></p>
            </div>
        </div>
    </div>
    <div class="form-group row" id="divProgresoArchivo" style="display:none;">
        <div class="col-md-12">
            <div id="total-progress" class="total-progress" data-total-parts="0" style="width: 0%;"></div>
        </div>
    </div>
</div>

